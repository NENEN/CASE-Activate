class Tubing_Losses
  parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water() "Water" annotation(choicesAllMatching=true);
  Modelica.Thermal.FluidHeatFlow.Components.HeatedPipe Tubing(medium=medium, dpLaminar=1, dpNominal=1, T0=293, m=0.02) annotation(Placement(visible=true, transformation(origin={-80,0}, extent={{-10,-10},{10,10}}, rotation=90)));
  Modelica.Thermal.HeatTransfer.Components.Convection convection1 annotation(Placement(visible=true, transformation(origin={80.0,0.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor Conduction_Insulation(G=0.1) annotation(Placement(visible=true, transformation(origin={40,0}, extent={{-10,-10},{10,10}}, rotation=0)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor Conduction_Tube(G=0.1) annotation(Placement(visible=true, transformation(origin={0,0}, extent={{-10,-10},{10,10}}, rotation=0)));
  Modelica.Thermal.HeatTransfer.Components.Convection convection2 annotation(Placement(visible=true, transformation(origin={-40,0}, extent={{10,-10},{-10,10}}, rotation=0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_a(T.start=293) annotation(Placement(visible=true, transformation(origin={100.0,-60.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0), iconTransformation(origin={102.0,-70.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0)));
  Modelica.Blocks.Interfaces.RealInput input_Convection_2 annotation(Placement(visible=true, transformation(origin={-60.0,60.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0), iconTransformation(origin={-50.0,100.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0)));
  Modelica.Blocks.Interfaces.RealInput input_Convection_1 annotation(Placement(visible=true, transformation(origin={60.0,60.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0), iconTransformation(origin={54.0,100.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0)));
  Modelica.Thermal.FluidHeatFlow.Interfaces.FlowPort_b flowport_b1(medium=medium) annotation(Placement(visible=true, transformation(origin={-80,80}, extent={{-10,-10},{10,10}}, rotation=0), iconTransformation(origin={100,0}, extent={{-10,-10},{10,10}}, rotation=0)));
  Modelica.Thermal.FluidHeatFlow.Interfaces.FlowPort_a flowport_a1(medium=medium) annotation(Placement(visible=true, transformation(origin={-80.0,-80.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0), iconTransformation(origin={-100.0,0.0}, extent={{-10.0,-10.0},{10.0,10.0}}, rotation=0)));
equation 
  connect(input_Convection_1,convection1.Gc) annotation(Line(visible=true, points={{60.0,60.0},{80.3571,60.0},{80.3571,10.3175},{80.0,10.0}}));
  connect(input_Convection_2,convection2.Gc) annotation(Line(visible=true, points={{-60.0,60.0},{-39.881,60.0},{-39.881,10.9127},{-40.0,10.0}}));
  connect(convection1.fluid,port_a) annotation(Line(visible=true, points={{90.0,0.0},{97.8175,0.0},{97.8175,-43.8492},{87.5,-43.8492},{87.5,-60.9127},{98.6111,-60.9127},{100.0,-60.0}}));
  connect(Conduction_Insulation.port_b,convection1.solid) annotation(Line(visible=true, points={{50.0,0.0},{70.4365,0.0},{70.4365,0.1984},{70.0,0.0}}));
  connect(flowport_a1,Tubing.flowPort_a) annotation(Line(visible=true, points={{-80.0,-80.0},{-79.9603,-80.0},{-79.9603,-10.3175},{-80.0,-10.0}}));
  connect(flowport_b1,Tubing.flowPort_b) annotation(Line(points={{-80,80},{-79.9615,80},{-79.9615,9.82659},{-79.9615,9.82659}}));
  connect(Conduction_Tube.port_b,Conduction_Insulation.port_a) annotation(Line(points={{10,0},{30.5556,0},{30.5556,0},{30.5556,0}}));
  connect(convection2.solid,Conduction_Tube.port_a) annotation(Line(points={{-30,0},{-9.92063,0},{-9.92063,0.595238},{-9.92063,0.595238}}));
  connect(Tubing.heatPort,convection2.fluid) annotation(Line(points={{-70,-6.12303e-16},{-70,0},{-49.0079,0},{-49.0079,0}}));
  annotation(Diagram(coordinateSystem(extent={{-100,-100},{100,100}}, preserveAspectRatio=true, initialScale=0.1, grid={2,2})), Icon(coordinateSystem(extent={{-100.0,-100.0},{100.0,100.0}}, preserveAspectRatio=true, initialScale=0.1, grid={2,2}), graphics={Bitmap(visible=true, origin={-67.325,41.8067}, fileName="", imageSource="", extent={{-14.3832,-79.8067},{137.0332,16.6511}}),Text(visible=true, origin={80.083,15.6477}, extent={{-14.083,-3.37},{14.083,3.37}}, textString="Outlet", fontSize=20, fontName="Arial"),Text(visible=true, origin={-91.6954,16.0954}, extent={{-13.49,-6.55},{13.49,6.55}}, textString="Inlet", fontSize=20, fontName="Arial"),Text(visible=true, origin={-72.0,86.15}, extent={{-35.1649,-6.15},{35.165,6.15}}, textString="Gc_Water-Tube", fontSize=15, fontName="Arial"),Text(visible=true, origin={28.0,86.0}, extent={{-31.0,-4.27},{31.0,4.27}}, textString="Gc_Insulation-Air", fontSize=15, fontName="Arial"),Text(visible=true, origin={64.05,-55.24}, extent={{-40.05,-4.76},{40.05,4.76}}, textString="Ambient_Temperature_Flow", fontSize=15, fontName="Arial")}));
end Tubing_Losses;
